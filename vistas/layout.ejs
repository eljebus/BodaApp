<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="screen-orientation" content="portrait">
    <link rel="icon" href="/img/luna.png">
    <title>Fatima & Jesús</title>

    <!-- Manifiesto para PWA -->
    <link rel="manifest" href="/manifest.json" crossorigin="use-credentials">

    <!-- Iconos para la aplicación -->
    <link rel="icon" href="/img/icon-192x192.png" sizes="192x192">
    <link rel="apple-touch-icon" href="/img/icon-192x192.png">

    <!-- Meta para PWA -->
    <meta name="theme-color" content="#3967AF">
    <meta name="description" content="Aplicación para la boda de Fátima y Jesús">

    <!-- Habilitar modo web app en iOS -->
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
    <meta name="apple-mobile-web-app-title" content="Boda FyJ">

    <!-- CSS -->
    <link href="/css/materialize.css" rel="stylesheet">
    <link href="/css/style.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="/js/materialize.js"></script>
</head>
<body>
    <div class="landscape-message">
        <center>
            <h4>Por favor gira tu teléfono</h4><br>
            <img src="/img/girar.png" alt="">
        </center>
    </div>

    <main>
        <%- include(content) %>
    </main>

    <!-- Modal de notificaciones push -->
    <div id="pushNotificationModal" class="modal">
        <div class="modal-content">
            <h4>Notificaciones Push</h4>
            <p>¿Deseas recibir notificaciones sobre actualizaciones importantes?</p>
        </div>
        <div class="modal-footer">
            <a href="#!" class="modal-close waves-effect waves-green btn-flat" id="acceptNotifications">Aceptar</a>
            <a href="#!" class="modal-close waves-effect waves-red btn-flat" id="declineNotifications">Cancelar</a>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const pushNotificationModal = M.Modal.init(document.getElementById('pushNotificationModal'), {
                dismissible: false
            });

            async function checkNotificationPermission() {
                try {
                    if (!('Notification' in window)) {
                        console.log('Este navegador no soporta notificaciones push');
                        return;
                    }

                    if (Notification.permission === 'denied') {
                        console.log('Los permisos de notificación han sido denegados');
                        return;
                    }

                    if (Notification.permission === 'granted') {
                        console.log('Los permisos de notificación ya han sido concedidos');
                        await subscribeToPushNotifications();
                        return;
                    }

                    if (!localStorage.getItem('pushNotificationDeclined')) {
                        pushNotificationModal.open();
                    }
                } catch (error) {
                    console.error('Error al verificar permisos:', error);
                }
            }

            document.getElementById('acceptNotifications').addEventListener('click', async function () {
                try {
                    const permission = await Notification.requestPermission();
                    if (permission === 'granted') {
                        await subscribeToPushNotifications();
                    } else {
                        console.log('Permiso denegado para notificaciones');
                    }
                } catch (error) {
                    console.error('Error al solicitar permiso:', error);
                }
            });

            document.getElementById('declineNotifications').addEventListener('click', function () {
                localStorage.setItem('pushNotificationDeclined', 'true');
            });

            async function subscribeToPushNotifications() {
                try {
                    const registration = await navigator.serviceWorker.register('/service-worker.js');
                    console.log('Service Worker registrado:', registration);

                    const existingSubscription = await registration.pushManager.getSubscription();
                    if (existingSubscription) {
                        console.log('Ya existe una suscripción:', existingSubscription);

                        const existingJSON = existingSubscription.toJSON();
                        if (!existingJSON || !existingJSON.endpoint) {
                            throw new Error("Suscripción existente inválida.");
                        }

                        const response = await fetch('/save-subscription', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify(existingJSON)
                        });

                        const result = await response.json();
                        console.log('Respuesta del servidor:', result);

                        if (result.message === 'Suscripción ya existe') {
                          console.log('Ya estás suscrito a las notificaciones');
                        } else {
                            M.toast({ html: '¡Notificaciones activadas!' });
                        }
                        return;
                    }

                    const subscription = await registration.pushManager.subscribe({
                        userVisibleOnly: true,
                        applicationServerKey: 'BC-d2euHb147bF7av1kpDwH84fswmN0_8zjODcQptU63P5q-FNVWa9Tuc_2GBofCc1SgDdbS8c_aHdDXiWfCYyo'
                    });

                    console.log('Suscripción exitosa:', subscription);

                    const subscriptionJSON = subscription.toJSON();
                    if (!subscriptionJSON || !subscriptionJSON.endpoint) {
                        throw new Error("Suscripción inválida: falta el endpoint.");
                    }

                    const response = await fetch('/save-subscription', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(subscriptionJSON)
                    });

                    if (!response.ok) {
                        throw new Error(`Error HTTP: ${response.status}`);
                    }

                    const result = await response.json();
                    console.log('Respuesta del servidor:', result);

                    if (result.message === 'Suscripción ya existe') {
                        M.toast({ html: 'Ya estás suscrito a las notificaciones' });
                    } else {
                        M.toast({ html: '¡Notificaciones activadas!' });
                    }

                } catch (error) {
                    console.error('Error al suscribirse:', error);
                    M.toast({ html: 'Error al activar notificaciones: ' + error.message });
                }
            }

            checkNotificationPermission();
        });
    </script>

    <script src="/js/fecha.js"></script>
    <script src="/js/instalar.js"></script>
</body>
</html>
