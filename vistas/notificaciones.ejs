<div class="container">
    <h4>Enviar Notificación Push</h4>
    <div class="row">
        <form id="notificationForm" class="col s12">
            <div class="row">
                <div class="input-field col s12">
                    <input id="title" type="text" class="validate" required>
                    <label for="title">Título de la notificación</label>
                </div>
            </div>
            <div class="row">
                <div class="input-field col s12">
                    <textarea id="body" class="materialize-textarea" required></textarea>
                    <label for="body">Mensaje de la notificación</label>
                </div>
            </div>
            <div class="row">
                <div class="col s12">
                    <button class="btn waves-effect waves-light" type="submit">
                        Enviar Notificación
                        <i class="material-icons right">send</i>
                    </button>
                </div>
            </div>
        </form>
    </div>
    <div id="subscriptionStatus" class="row" style="display: none;">
        <div class="col s12">
            <div class="card">
                <div class="card-content">
                    <p id="statusMessage"></p>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('notificationForm');
    const subscriptionStatus = document.getElementById('subscriptionStatus');

    // Verificar HTTPS
    if (window.location.protocol !== 'https:') {
        M.toast({html: 'Se requiere HTTPS'});
        form.style.display = 'none';
        return;
    }

    // Verificar suscripciones
    async function checkSubscriptions() {
        try {
            const response = await fetch('/check-subscription', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' }
            });
            const data = await response.json();
            
            // Mostrar estado
            subscriptionStatus.style.display = 'block';
            subscriptionStatus.innerHTML = `
                <div class="card-panel ${data.exists ? 'green' : 'red'} lighten-4">
                    <i class="material-icons left">${data.exists ? 'check_circle' : 'warning'}</i>
                    <span id="statusMessage">${data.exists ? 'Suscripción activa' : 'No hay suscripciones'}</span>
                </div>
            `;

            console.log(data); // Para depuración
        } catch (error) {
            M.toast({html: 'Error al verificar suscripciones'});
        }
    }

    checkSubscriptions();
    setInterval(checkSubscriptions, 5000);

    // Enviar notificación
    form.addEventListener('submit', async function(e) {
        e.preventDefault();
        const title = document.getElementById('title').value.trim();
        const body = document.getElementById('body').value.trim();

        if (!title || !body) {
            M.toast({html: 'Complete todos los campos'});
            return;
        }

        try {
            const response = await fetch('/send-notification', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ title, body })
            });
            const data = await response.json();
            
            if (!response.ok) throw new Error(data.error);
            
            M.toast({html: `Notificación enviada a ${data.successful} usuarios`});
            form.reset();
            checkSubscriptions();
        } catch (error) {
            M.toast({html: error.message || 'Error al enviar'});
        }
    });
});
</script>

